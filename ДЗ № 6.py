import random

proverbs = [
"Ум хорошо, а два лучше.",
"Ум — горячая штука.",
"Ум всё голова.",
"Умом Россию не понять.",
"Ум бережет, а глупость губит.",
"Ум в голову приходит.",
"Ум от ума не горит.",
"Умом нагружен, а волосы развеваются.",
"Умом обдумал, а ногами пошел.",
"Ум — сокровище, не пропадет без него и копье на ветру.",
"Ум — грех, а бес — мера.",
"Ум есть богатство.",
"Ум роднит народы.",
"Ум краток, да забот — бездна.",
"Ум не камень, взял и положил.",
"Ум не велит, а наставляет.",
"Ум с мерой, а глупость без меры.",
"Ум — сокол, глаз его — телескоп.",
"Ум — не конская морда, не разобьешь.",
"Ум — семь пядей во лбу.",
"Ум — не барсук, в нору не залезет.",
"Ум в голове, а не на ветру.",
"Ум греет душу, а глупость терпение.",
"Ум служит человеку, а глупость — хозяином.",
"Ум мил, да безумству хозяин.",
"Ум в труде, да наслаждение в праздности.",
"Ум глаза исправляет.",
"Ум человека не обманешь.",
"Ум на подобии огня — без сна не останешься.",
"Ум к уму приходит.",
"Ум с пользой тратит время.",
"Ум желание творит.",
"Ум общего дела дело.",
"Ум — друг, а воля — враг.",
"Ум — бесценное сокровище.",
"Ум тонок, да разум невелик.",
"Ум — враг бедности.",
"Ум — теремок, да не на прокол.",
"Ум силен, да не камень.",
"Ум рассудит, что сердце не посоветует.",
"Ум — подкова, а топор — ось.",
"Ум легче камня, да весомей золота.",
"Ум не вешать на гроздья.",
"Ум — не мешок, на плечи не вешай.",
"Ум — лучшая победа.",
"Ум — в суде велик, а в деле своем мал.",
"Ум голове краса.",
"Ум — сокровище, а глупость — нищета.",
"Ум человека — огонь, а глаза — масло.",
"Ум — путь, а дорога — конец.",
"Ум стоит денег.",
"Ум от смеха бьет в ладоши.",
"Ум — коза, к барскому плечу привыкает.",
"Ум — лезвие, а лень — ржавчина.",
"Ум на вершине — мир в руках.",
]

variants = [
'кот',
'шеф',
'мозг',
'лес',
'фолк',
'код',
'рот',
'мёд',
'лук',
'лес',
'год',
'час',
'друг',
'жена',
'муж',
'айфон',
'работа',
]


number_proverbs = int(input('Введите число пословиц: '))
results = []

if number_proverbs > len(variants):
    print("Недостаточно данных!")
else:
    for i in range(number_proverbs):
        length_proverbs = len(proverbs)  # Получаем длину списка с пословицами.
        length_variants = len(variants)  # Получаем длину списка с вариантами замены
        proverb = proverbs.pop(random.randint(0, length_proverbs - 1))
        # Получаем рандомную пословицу и удаляем ее из списка
        proverb_low = proverb.lower() # Приводим пословицу к нижнему регистру
        variant = variants.pop(random.randint(0, length_variants - 1))
        # Получаем рандомное слово и удаляем его из списка
        new_proverb = proverb_low.replace('ум', variant)  # Заменяем слово ум в пословице
        new_proverb_cap = new_proverb.capitalize()
        results.append(new_proverb_cap)
print(results)




